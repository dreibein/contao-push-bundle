"serviceWorker"in navigator&&document.addEventListener("DOMContentLoaded",()=>{let e=!1;const n=document.getElementById("push-subscription-button");if(n){if(/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream||(n.style.display="inherit"),n.addEventListener("click",function(){e?(i("computing"),navigator.serviceWorker.ready.then(e=>e.pushManager.getSubscription()).then(e=>{if(e)return r(e,"DELETE");i("disabled")}).then(e=>e.unsubscribe()).then(()=>i("disabled")).catch(e=>{console.error("Error when unsubscribing the user",e),i("disabled")})):(i("computing"),new Promise((e,n)=>"denied"===Notification.permission?n(new Error("Push messages are blocked.")):"granted"===Notification.permission?e():"default"===Notification.permission?Notification.requestPermission().then(i=>{"granted"!==i&&n(new Error("Bad permission result")),e()}):void 0).then(()=>navigator.serviceWorker.ready).then(e=>e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:t(applicationServerKey)})).then(e=>r(e,"POST")).then(e=>e&&i("enabled")).catch(e=>{"denied"===Notification.permission?(console.warn("Notifications are denied by the user."),i("incompatible")):(console.error("Impossible to subscribe to push notifications",e),i("disabled"))}))}),!("serviceWorker"in navigator))return console.warn("Service workers are not supported by this browser"),void i("incompatible");if(!("PushManager"in window))return console.warn("Push notifications are not supported by this browser"),void i("incompatible");if(!("showNotification"in ServiceWorkerRegistration.prototype))return console.warn("Notifications are not supported by this browser"),void i("incompatible");if("denied"===Notification.permission)return console.warn("Notifications are denied by the user"),void i("incompatible");navigator.serviceWorker.register("/contao-push-sw.js",{scope:"/"}).then(()=>{console.log("[SW] Service worker has been registered"),navigator.serviceWorker.ready.then(e=>e.pushManager.getSubscription()).then(e=>{if(i("disabled"),e)return r(e,"PUT")}).then(e=>e&&i("enabled")).catch(e=>{console.error("Error when updating the subscription",e)})},e=>{console.error("[SW] Service worker registration failed",e),i("incompatible")})}function i(i){switch(i){case"enabled":e=!0,n.disabled=!1,n.textContent=n.dataset.disable;break;case"disabled":e=!1,n.disabled=!1,n.textContent=n.dataset.enable;break;case"computing":n.disabled=!0;break;case"incompatible":n.disabled=!0,console.error("Push notifications are not compatible with this browser");break;default:console.error("Unhandled push button state",i)}}function t(e){const n=(e+"=".repeat((4-e.length%4)%4)).replace(/\-/g,"+").replace(/_/g,"/"),i=window.atob(n),t=new Uint8Array(i.length);for(let e=0;e<i.length;++e)t[e]=i.charCodeAt(e);return t}function r(e,n){const i=e.getKey("p256dh"),t=e.getKey("auth"),r=(PushManager.supportedContentEncodings||["aesgcm"])[0];return fetch("_push/subscription",{method:n,body:JSON.stringify({endpoint:e.endpoint,publicKey:i?btoa(String.fromCharCode.apply(null,new Uint8Array(i))):null,authToken:t?btoa(String.fromCharCode.apply(null,new Uint8Array(t))):null,contentEncoding:r})}).then(()=>e)}});
